{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanju Sabu\\\\Desktop\\\\Codes\\\\SIH-Project\\\\src\\\\components\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // import validator from 'validator';\n\nimport useInput from '../../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isEmail = value => value.includes('@');\n\nconst isPassword = value => value.trim().length >= 3;\n\nconsole.log(isPassword.value);\nlet formValid = false;\nlet conPass = true;\n\nconst Register = props => {\n  _s();\n\n  const [enteredConfirmedPassword, setConfirmPassword] = useState('');\n  const [isTouched, setisTouched] = useState(false);\n  const {\n    value: nameValue,\n    isValid: nameisValid,\n    hasError: nameError,\n    valueChangeHandler: nameChangeHandler,\n    BlurHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailisValid,\n    hasError: emailError,\n    valueChangeHandler: emailChangeHandler,\n    BlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  const {\n    value: passwordValue,\n    isValid: passwordisValid,\n    hasError: passwordError,\n    valueChangeHandler: passwordChangeHandler,\n    BlurHandler: passwordBlurHandler,\n    reset: resetPassword\n  } = useInput(isPassword);\n\n  const confirmPasswordChangeHandler = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  const confirmPasswordBlurHandler = () => {\n    setisTouched(true);\n  };\n\n  useEffect(() => {\n    if (enteredConfirmedPassword === passwordValue) {\n      conPass = true;\n    }\n\n    if (enteredConfirmedPassword !== passwordValue) {\n      conPass = false;\n    }\n  }, [enteredConfirmedPassword, passwordValue]);\n  const nameClasses = !nameError ? 'form-control' : 'form-control-invalid';\n  const emailClasses = !emailError ? 'form-control' : 'form-control-invalid';\n  const passwordClasses = !passwordError ? 'form-control' : 'form-control-invalid'; // const confirmPassClasses = conPass ? 'form-control' : 'form-control-invalid'\n\n  if (nameisValid && emailisValid && passwordisValid && conPass) {\n    formValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(nameValue, emailValue);\n    resetName();\n    resetEmail();\n    resetPassword();\n    setConfirmPassword('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: nameValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), nameError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter a Name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: emailValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please Enter a valid Email!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: passwordClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Set Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"set_password\",\n        onChange: passwordChangeHandler,\n        onBlur: passwordBlurHandler,\n        value: passwordValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Password should be atleast 3 characters long!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: passwordClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirm_password\",\n        onChange: confirmPasswordChangeHandler,\n        onBlur: confirmPasswordBlurHandler,\n        value: enteredConfirmedPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), isTouched && !conPass && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Passwords are not the same!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"Tvq+TP+qfDwPa3CL1tN+6osIK+E=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useEffect","useInput","isNotEmpty","value","trim","isEmail","includes","isPassword","length","console","log","formValid","conPass","Register","props","enteredConfirmedPassword","setConfirmPassword","isTouched","setisTouched","nameValue","isValid","nameisValid","hasError","nameError","valueChangeHandler","nameChangeHandler","BlurHandler","nameBlurHandler","reset","resetName","emailValue","emailisValid","emailError","emailChangeHandler","emailBlurHandler","resetEmail","passwordValue","passwordisValid","passwordError","passwordChangeHandler","passwordBlurHandler","resetPassword","confirmPasswordChangeHandler","e","target","confirmPasswordBlurHandler","nameClasses","emailClasses","passwordClasses","submitHandler","event","preventDefault"],"sources":["C:/Users/Sanju Sabu/Desktop/Codes/SIH-Project/src/components/Register/Register.js"],"sourcesContent":["import { useState,useEffect} from 'react'\r\n// import validator from 'validator';\r\nimport useInput from '../../hooks/useInput';\r\n\r\nconst isNotEmpty = value =>value.trim() !== '';\r\nconst isEmail = value => value.includes('@');\r\nconst isPassword = value => value.trim().length >= 3;\r\nconsole.log(isPassword.value)\r\n\r\nlet formValid = false;\r\nlet conPass = true;\r\n\r\nconst Register = (props) => {\r\n\r\n  const [enteredConfirmedPassword,setConfirmPassword] = useState('');\r\n  const [isTouched,setisTouched] = useState(false)\r\n\r\n  const {\r\n    value: nameValue,\r\n    isValid: nameisValid,\r\n    hasError:nameError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    BlurHandler: nameBlurHandler,\r\n    reset : resetName\r\n\r\n  } = useInput(isNotEmpty);\r\n\r\n  const {\r\n    value: emailValue,\r\n    isValid: emailisValid,\r\n    hasError:emailError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    BlurHandler: emailBlurHandler,\r\n    reset : resetEmail\r\n\r\n  } = useInput(isEmail);\r\n\r\n  const {\r\n    value: passwordValue,\r\n    isValid: passwordisValid,\r\n    hasError:passwordError,\r\n    valueChangeHandler: passwordChangeHandler,\r\n    BlurHandler: passwordBlurHandler,\r\n    reset : resetPassword\r\n\r\n  } = useInput(isPassword);\r\n \r\n const confirmPasswordChangeHandler=(e)=>\r\n{\r\n    setConfirmPassword(e.target.value)\r\n}\r\n\r\nconst confirmPasswordBlurHandler = ()=>\r\n  {\r\n    setisTouched(true)\r\n  }\r\n\r\nuseEffect(()=>{\r\n  \r\n    if(enteredConfirmedPassword === passwordValue)\r\n    {\r\n      conPass= true\r\n    }\r\n    if(enteredConfirmedPassword !== passwordValue)\r\n    {\r\n      conPass= false\r\n    }\r\n\r\n},[enteredConfirmedPassword,passwordValue])\r\n\r\n  const nameClasses = !nameError ? 'form-control' : 'form-control-invalid'\r\n  const emailClasses = !emailError ? 'form-control' : 'form-control-invalid'\r\n  const passwordClasses = !passwordError ? 'form-control' : 'form-control-invalid'\r\n  // const confirmPassClasses = conPass ? 'form-control' : 'form-control-invalid'\r\n\r\n\r\n  if(nameisValid && emailisValid && passwordisValid && conPass)\r\n  {\r\n    formValid = true\r\n  }\r\n\r\n  const submitHandler =(event)=>\r\n  {\r\n    event.preventDefault();\r\n    if(!formValid)\r\n    {\r\n      return;\r\n    }\r\n    console.log(nameValue,emailValue)\r\n    resetName()\r\n    resetEmail()\r\n    resetPassword()\r\n    setConfirmPassword('')\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={nameClasses}>\r\n        <label htmlFor='name'>Name</label>\r\n        <input\r\n         type='text'\r\n          id='name'\r\n          onChange={nameChangeHandler} \r\n          onBlur={nameBlurHandler} \r\n          value={nameValue} />\r\n\r\n        {nameError && <p className='error-text'>Please Enter a Name!</p>}\r\n      </div>\r\n\r\n      <div className={emailClasses}>\r\n        <label htmlFor='email'>Email</label>\r\n        \r\n        <input type='text'\r\n         id='email'\r\n        onChange={emailChangeHandler} \r\n        onBlur={emailBlurHandler} \r\n        value={emailValue} />\r\n\r\n        {emailError && <p className='error-text'>Please Enter a valid Email!</p>}\r\n      </div>\r\n\r\n      <div className={passwordClasses}>\r\n        <label htmlFor='password'>Set Password</label>\r\n        \r\n        <input type='password'\r\n         id='set_password'\r\n        onChange={passwordChangeHandler} \r\n        onBlur={passwordBlurHandler} \r\n        value={passwordValue} />\r\n\r\n        {passwordError && <p className='error-text'>Password should be atleast 3 characters long!</p>}\r\n      </div>\r\n\r\n      <div className={passwordClasses}>\r\n        <label htmlFor='password'>Confirm Password</label>\r\n        \r\n        <input type='password'\r\n         id='confirm_password'\r\n        onChange={confirmPasswordChangeHandler} \r\n        onBlur={confirmPasswordBlurHandler} \r\n        value={enteredConfirmedPassword} />\r\n\r\n        {isTouched && !conPass && <p className='error-text'>Passwords are not the same!</p>}\r\n      </div>\r\n\r\n\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}