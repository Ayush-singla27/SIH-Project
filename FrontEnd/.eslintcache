[{"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\index.js":"1","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\App.js":"2","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\context\\authcontext.js":"3","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Home\\search.js":"4","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Profile\\profile.js":"5","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Register\\Register.js":"6","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\header\\header.js":"7","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Landingpage.js":"8","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Login\\Login.js":"9","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Addprevjobs.js":"10","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Profile\\FormInput.js":"11","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Pastjobs.js":"12","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Home\\Joblist.js":"13","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Profile\\SkillPanel.js":"14","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\hooks\\useInput.js":"15","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\NavBar\\NavBar.js":"16","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\hooks\\request-hook.js":"17","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\ErrorModal.js":"18","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\LoadingSpinner.js":"19","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Home\\Jobs.js":"20","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Jobdetails.js":"21","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\Modal.js":"22","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\FormElements\\Button.js":"23","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\Backdrop.js":"24","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Formd\\Formd.js":"25"},{"size":186,"mtime":1660765905940,"results":"26","hashOfConfig":"27"},{"size":3033,"mtime":1660843036053,"results":"28","hashOfConfig":"27"},{"size":169,"mtime":1660765905932,"results":"29","hashOfConfig":"27"},{"size":1630,"mtime":1660857505888,"results":"30","hashOfConfig":"27"},{"size":8826,"mtime":1660890833204,"results":"31","hashOfConfig":"27"},{"size":6405,"mtime":1660843036061,"results":"32","hashOfConfig":"27"},{"size":2675,"mtime":1660843036061,"results":"33","hashOfConfig":"27"},{"size":3849,"mtime":1660865387903,"results":"34","hashOfConfig":"27"},{"size":3915,"mtime":1660843036061,"results":"35","hashOfConfig":"27"},{"size":3365,"mtime":1660865367412,"results":"36","hashOfConfig":"27"},{"size":4252,"mtime":1660765905932,"results":"37","hashOfConfig":"27"},{"size":1991,"mtime":1660865768418,"results":"38","hashOfConfig":"27"},{"size":611,"mtime":1660856848377,"results":"39","hashOfConfig":"27"},{"size":2941,"mtime":1660765905932,"results":"40","hashOfConfig":"27"},{"size":799,"mtime":1660765905932,"results":"41","hashOfConfig":"27"},{"size":2239,"mtime":1660765905932,"results":"42","hashOfConfig":"27"},{"size":1172,"mtime":1660806332172,"results":"43","hashOfConfig":"27"},{"size":437,"mtime":1660806557411,"results":"44","hashOfConfig":"27"},{"size":286,"mtime":1660765905922,"results":"45","hashOfConfig":"27"},{"size":520,"mtime":1660857027843,"results":"46","hashOfConfig":"27"},{"size":734,"mtime":1660765905931,"results":"47","hashOfConfig":"27"},{"size":1262,"mtime":1660765905922,"results":"48","hashOfConfig":"27"},{"size":1060,"mtime":1660765905922,"results":"49","hashOfConfig":"27"},{"size":302,"mtime":1660765905922,"results":"50","hashOfConfig":"27"},{"size":11851,"mtime":1660844577275,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1gn8tsi",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\index.js",[],["113","114"],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\App.js",["115"],"import Headers from \"./components/header/header\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { AuthContext } from \"./context/authcontext\";\r\nimport { useCallback, useId, useState, useEffect } from \"react\";\r\nimport Search from \"./components/Home/search\";\r\nimport Addprevjobs from \"./components/LandingPage/Addprevjobs\";\r\nimport Landingpage from \"./components/LandingPage/Landingpage\";\r\nimport Profile from \"./components/Profile/profile\";\r\nimport Formd from \"./components/Formd/Formd\";\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userId, setuserId] = useState(\"\");\r\n\r\n  const login = useCallback((uid) => {\r\n    localStorage.setItem(\"userid\", uid);\r\n    setIsLoggedIn(true);\r\n    setuserId(localStorage.getItem(\"userid\"));\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setIsLoggedIn(false);\r\n    setuserId(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.hasOwnProperty(\"userid\")) {\r\n      setuserId(localStorage.getItem(\"userid\"));\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  let routes;\r\n  if (isLoggedIn) {\r\n    routes = (\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <Headers />\r\n                <Search />\r\n              </>\r\n            }\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path=\"/Home\"\r\n            element={\r\n              <>\r\n                <Headers />\r\n                <Search />\r\n              </>\r\n            }\r\n          ></Route>\r\n          <Route path=\"/landingpage\" element={<Landingpage />}></Route>\r\n          <Route path=\"/profile\" element={<Profile />}></Route>\r\n\r\n          <Route\r\n            exact\r\n            path=\"/addpreviousjobs\"\r\n            element={<Addprevjobs />}\r\n          ></Route>\r\n        </Routes>\r\n      </Router>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Router>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <Headers />\r\n                <Search />\r\n              </>\r\n            }\r\n          ></Route>\r\n          <Route\r\n            exact\r\n            path=\"/Home\"\r\n            element={\r\n              <>\r\n                <Headers />\r\n                <Search />\r\n              </>\r\n            }\r\n          ></Route>\r\n          <Route exact path=\"/login\" element={<Login />}></Route>\r\n          <Route exact path=\"/formd\" element={<Formd />}></Route>\r\n          <Route exact path=\"/register\" element={<Register />}></Route>\r\n        </Routes>\r\n      </Router>\r\n    );\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <main>{routes}</main>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\context\\authcontext.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Home\\search.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Profile\\profile.js",["116","117","118","119","120"],"import React, { useState,useEffect } from \"react\";\r\n// import userImg from \"./userProfile.png\";\r\nimport \"./Profile.css\";\r\nimport FormInput from \"./FormInput\";\r\nimport SkillPanel from \"./SkillPanel\";\r\n// import UploadAndDisplayImage from \"./UploadAndDisplayImage\";\r\nimport Pastjobs from \"../LandingPage/Pastjobs\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport { useRequest } from \"../../hooks/request-hook\";\r\nexport default function Profile(props) {\r\n  const showForm = () => {\r\n    console.log(displayForm);\r\n    setStyle(\"block\");\r\n  };\r\nconst {sendRequest} = useRequest()\r\nconst [data,setData]  = useState([])\r\nuseEffect(() => {\r\n  const fetchUsers = async () => {\r\n    try {\r\n      if (localStorage.hasOwnProperty(\"userid\")) {\r\n      const responseData = await sendRequest(\r\n        'http://localhost:5002/users/details',\r\n        'POST',\r\n        JSON.stringify({\r\n          user: localStorage.getItem(\"userid\")\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      // responseData.info.map(data=>setData(data))\r\n     console.log(responseData.info)\r\n    } }catch (err) {\r\n      console.log(err)\r\n    }\r\n  };\r\n\r\n\r\n  fetchUsers();\r\n}, [sendRequest]);\r\n\r\n  const loadFile = function (event) {\r\n    var image = document.getElementById(\"output\");\r\n    image.src = URL.createObjectURL(event.target.files[0]);\r\n    console.log(image.src);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredDetails = {\r\n      name: EnteredName,\r\n      location: EnteredLocation,\r\n      phoneNo: EnteredPhoneNo,\r\n      dob: new Date(EnteredDate),\r\n    };\r\n    console.log(enteredDetails);\r\n  };\r\n\r\n  const nameChange = (event) => {\r\n    setEnteredName(event.target.value);\r\n    // console.log(event.target.value)\r\n  };\r\n  const locationChange = (event) => {\r\n    setEnteredLocation(event.target.value);\r\n    // console.log(event.target.value)\r\n  };\r\n  const phonenoChange = (event) => {\r\n    setEnteredPhoneNo(event.target.value);\r\n    // console.log(event.target.value)\r\n  };\r\n  const dateChange = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // console.log(event.target.value)\r\n  };\r\n  // const monthChange = (event) =>{\r\n  //   setEnteredMonth(event.target.value);\r\n  //   // console.log(event.target.value)\r\n  // }\r\n  // const yearChange = (event) =>{\r\n  //   setEnteredYear(event.target.value);\r\n  //   // console.log(event.target.value)\r\n  // }\r\n  const gender = (event) => {\r\n    setEnteredGender(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    setFilledName(EnteredName)\r\n    setFilledLocation(EnteredLocation)\r\n    setFilledPhoneNo(EnteredPhoneNo)\r\n    setFilledDate(EnteredDate)\r\n    setFilledGender(EnteredGender)\r\n    console.log(displayForm);\r\n    setStyle(\"none\");\r\n  };\r\n\r\n  const [displayForm, setStyle] = useState(\"none\");\r\n  const [EnteredName, setEnteredName] = useState(\"Name\");\r\n  const [FilledName, setFilledName] = useState(\"Name\");\r\n  const [EnteredLocation, setEnteredLocation] = useState(\"Location\");\r\n  const [FilledLocation, setFilledLocation] = useState(\"Location\");\r\n  const [EnteredPhoneNo, setEnteredPhoneNo] = useState(\"Phone\");\r\n  const [FilledPhoneNo, setFilledPhoneNo] = useState(\"Phone\");\r\n  const [EnteredDate, setEnteredDate] = useState(\"DOB\");\r\n  const [FilledDate, setFilledDate] = useState(\"DOB\");\r\n  // const [EnteredMonth, setEnteredMonth] = useState(\"\");\r\n  // const [EnteredYear, setEnteredYear] = useState(\"\");\r\n  const [EnteredGender, setEnteredGender] = useState(\"Gender\");\r\n  const [FilledGender, setFilledGender] = useState(\"Gender\");\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div id=\"profile\">\r\n        <div className=\"basic-info\">\r\n          <div className=\"profile-image\">\r\n            <p>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                name=\"image\"\r\n                id=\"file\"\r\n                onChange={loadFile}\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </p>\r\n            <p className=\"upload-btn\">\r\n              <label htmlFor=\"file\" style={{ cursor: \"pointer\"}}>\r\n                Upload Image\r\n              </label>\r\n            </p>\r\n            <p>\r\n              {/* <img id=\"output\" width=\"100%\" style={{borderRadius:\"100%\" ,width:\"60%\", objectFit:\"cover\"}} /> */}\r\n              <img\r\n                id=\"output\"\r\n                width=\"100%\"\r\n                style={{\r\n                  objectFit: \"cover\",\r\n                  zIndex: \"1\",\r\n                }}\r\n              />\r\n            </p>\r\n          </div>\r\n          <div className=\"details\">\r\n            <ul className=\"detailsul-1\">\r\n              <li>{FilledName}</li>\r\n              <li>{FilledLocation}</li>\r\n            </ul>\r\n            <ul className=\"detailsul-2\">\r\n              <li>{FilledPhoneNo}</li>\r\n              <li>{FilledDate}</li>\r\n              <button className=\"btn btn-primary detailedit\" onClick={showForm}>\r\n                Edit\r\n              </button>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"form-container container\"\r\n        style={{ display: `${displayForm}`, position: \"relative\" }}\r\n      >\r\n        <form onSubmit={submitHandler}>\r\n          <div className=\"row container\">\r\n            <h4>Edit Details</h4>\r\n            <div className=\" input-group input-group-icon iconissue\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Full Name\"\r\n                // id=\"username\"\r\n                size=\"50\"\r\n                name=\"fullName\"\r\n                onChange={nameChange}\r\n              />\r\n              <div className=\"input-icon\">\r\n                <i className=\"fa fa-user\"></i>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group input-group-icon iconissue\">\r\n              {/* <label htmlFor=\"locationTextField\"></label> */}\r\n              <input\r\n                // id=\"locationTextField\"\r\n                type=\"text\"\r\n                size=\"50\"\r\n                placeholder=\"Current Location\"\r\n                name=\"location\"\r\n                onChange={locationChange}\r\n              />\r\n              {/* <input type=\"email\" placeholder=\"Email Adress\"/> */}\r\n\r\n              <div className=\"input-icon\">\r\n                <i className=\"fa fa-envelope\"></i>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group input-group-icon\">\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Phone Number\"\r\n                size=\"50\"\r\n                name=\"phNo\"\r\n                onChange={phonenoChange}\r\n              />\r\n              <div className=\"input-icon\">\r\n                <i className=\"fa fa-key\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-half\">\r\n              <h4>Date of Birth</h4>\r\n              <div className=\"input-group\">\r\n                <div className=\"col-third\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"day\"\r\n                    size=\"50\"\r\n                    onChange={dateChange}\r\n                    style={{ width: \"260px\" }}\r\n                  />\r\n                </div>\r\n                {/* <div className=\"col-third\">\r\n                  <input type=\"text\" placeholder=\"MM\" name=\"month\" onChange={monthChange}/>\r\n                </div>\r\n                <div className=\"col-third\">\r\n                  <input type=\"text\" placeholder=\"YYYY\" name=\"year\"onChange={yearChange} />\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-half\">\r\n              <h4>Gender</h4>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  id=\"gender-male\"\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"male\"\r\n                  onChange={gender}\r\n                />\r\n                <label htmlFor=\"gender-male\">Male</label>\r\n                <input\r\n                  id=\"gender-female\"\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"female\"\r\n                  onChange={gender}\r\n                />\r\n                <label htmlFor=\"gender-female\">Female</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"submit-btn btn btn-primary\" onClick={saveChanges}>\r\n            Save Changes\r\n          </button>\r\n          {/* <input type=\"submit\">Save Changes</input> */}\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"SkillPanel\">\r\n        <SkillPanel />\r\n      </div>\r\n\r\n      <div className=\"pastJobs\">\r\n        <Pastjobs />\r\n      </div>\r\n\r\n      {/* <EditInfo /> */}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Register\\Register.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\header\\header.js",["121"],"import { Link, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/authcontext\";\r\nimport { useContext } from \"react\";\r\nconst Headers = () => {\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  if (auth.isLoggedIn) {\r\n    navigate(\"/landingpage\");\r\n  }\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"#\">\r\n          Navbar\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {!auth.isLoggedIn && (\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </ul>\r\n\r\n          {!auth.isLoggedIn && (\r\n            <div className=\"rightside\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item1\">\r\n                  <Link\r\n                    className=\"nav-link active\"\r\n                    aria-current=\"page\"\r\n                    to=\"/login\"\r\n                  >\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item1\">\r\n                  <Link\r\n                    className=\"nav-link active\"\r\n                    aria-current=\"page\"\r\n                    to=\"/register\"\r\n                  >\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item1\">\r\n                  <Link\r\n                    className=\"nav-link active\"\r\n                    aria-current=\"page\"\r\n                    to=\"/formd\"\r\n                  >\r\n                    Form\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Headers;\r\n\r\n{\r\n  /* <ul>\r\n  {!auth.isLoggedIn && (\r\n    <li>\r\n      <NavLink to=\"/login\">Login</NavLink>\r\n    </li>\r\n  )}\r\n\r\n  {!auth.isLoggedIn && (\r\n    <li>\r\n      <NavLink to=\"register\">Register</NavLink>\r\n    </li>\r\n  )}\r\n</ul>; */\r\n}\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Landingpage.js",["122"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport { useEffect,useState } from \"react\";\r\nimport { useRequest } from \"../../hooks/request-hook\";\r\n\r\nconst Landingpage = () => {\r\n  const {sendRequest} = useRequest()\r\n  const [data,setData] = useState([])\r\n\r\n  let dat\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        if (localStorage.hasOwnProperty(\"userid\")) {\r\n        const responseData = await sendRequest(\r\n          'http://localhost:5002/users/details',\r\n          'POST',\r\n          JSON.stringify({\r\n            user: localStorage.getItem(\"userid\")\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        responseData.info.map(data=>setData(data))\r\n      //  setData(responseData.info)\r\n      } }catch (err) {\r\n        console.log(err)\r\n      }\r\n    };\r\n \r\n\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div>\r\n        <div className=\"contain\">\r\n          <form className=\"search d-flex my-5\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"containers\">\r\n            <div className=\"left\">\r\n              <div className=\"jobs\">\r\n                <div className=\"conta d-flex\">\r\n                  <h2 className=\"head\">Jobs</h2>\r\n               \r\n                </div>\r\n\r\n                <div className=\"options\">\r\n                  <h3 className=\"title\">CillyFox</h3>\r\n                  <p className=\"service\">Liquid eLearning Services</p>\r\n                  <h6 className=\"time\">Time Period : 3 Months</h6>\r\n                  <h6 className=\"proglanguage\">Language : Python</h6>\r\n                </div>\r\n                <div className=\"options\">\r\n                  <h3 className=\"title\">CillyFox</h3>\r\n                  <p className=\"service\">Liquid eLearning Services</p>\r\n                  <h6 className=\"time\">Time Period : 3 Months</h6>\r\n                  <h6 className=\"proglanguage\">Language : Python</h6>\r\n                </div>\r\n                <div className=\"options\">\r\n                  <h3 className=\"title\">CillyFox</h3>\r\n                  <p className=\"service\">Liquid eLearning Services</p>\r\n                  <h6 className=\"time\">Time Period : 3 Months</h6>\r\n                  <h6 className=\"proglanguage\">Language : Python</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <h2 className=\"head\">Profile</h2>\r\n              <div className=\"options\">\r\n                <div className=\"ima\">\r\n                  <div className=\"image\">\r\n                    <i className=\"fa-solid fa-user prof\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"deta\">\r\n                  <h3 className=\"name\">{data.name}</h3>\r\n                  <p className=\"text\">\r\n                    <small className=\"text-muted\">\r\n                       {data.email}\r\n                    </small>\r\n                  </p>\r\n                  <div className=\"butt d-flex justify-content-md-center\">\r\n                    <Link to=\"/profile\">\r\n                      <button className=\"btn btn-primary\">\r\n                        Update Profile\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landingpage;\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Login\\Login.js",["123"],"import useInput from \"../../hooks/useInput\";\r\nimport { useRequest } from \"../../hooks/request-hook\";\r\nimport ErrorModal from \"../../Design/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../context/authcontext\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport classes from \"./Login.module.css\";\r\nconst isEmail = (value) => value.includes(\"@\");\r\nconst isPassword = (value) => value.trim().length >= 6;\r\nlet formValid = false;\r\nconst Login = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isError, sendRequest, clearError,exists } = useRequest();\r\n\r\n  const {\r\n    value: emailValue,\r\n    isValid: emailisValid,\r\n    hasError: emailError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    BlurHandler: emailBlurHandler,\r\n    reset: resetEmail,\r\n  } = useInput(isEmail);\r\n\r\n  const {\r\n    value: passwordValue,\r\n    isValid: passwordisValid,\r\n    hasError: passwordError,\r\n    valueChangeHandler: passwordChangeHandler,\r\n    BlurHandler: passwordBlurHandler,\r\n    reset: resetPassword,\r\n  } = useInput(isPassword);\r\n\r\n  const emailClasses = !emailError\r\n    ? \"form-control-inputtext\"\r\n    : \"form-control-invalid\";\r\n  const passwordClasses = !passwordError\r\n    ? \"form-control-inputtext\"\r\n    : \"form-control-invalid\";\r\n\r\n  if (emailisValid && passwordisValid) {\r\n    formValid = true;\r\n  }\r\n  if (!emailisValid || !passwordisValid) {\r\n    formValid = false;\r\n  }\r\n  const navigate = useNavigate();\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    const response = await sendRequest(\r\n      \"http://localhost:5002/users/login\",\r\n      \"POST\",\r\n      JSON.stringify({\r\n        email: emailValue,\r\n        password: passwordValue,\r\n      }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n\r\n    navigate(\"/landingpage\");\r\n    auth.login(response.user.id);\r\n    console.log(response);\r\n    resetEmail();\r\n    resetPassword();\r\n  };\r\n  return (\r\n    <>\r\n    {console.log(isError)}\r\n       <ErrorModal error={isError} onClear={clearError} />\r\n      <form onSubmit={submitHandler}>\r\n        <br></br>\r\n        <div className={classes.main}>\r\n          <div className={classes.log}>Login Form</div>\r\n          <br></br>\r\n          <div className={emailClasses}>\r\n            <label htmlFor=\"Email\" className={classes.em}>\r\n              Email\r\n            </label>\r\n            <br></br>\r\n            <div className={classes.in}>\r\n              <input\r\n                className={classes.textUL}\r\n                type=\"text\"\r\n                size=\"38\"\r\n                id=\"email\"\r\n                onChange={emailChangeHandler}\r\n                onBlur={emailBlurHandler}\r\n                value={emailValue}\r\n              />\r\n            </div>\r\n\r\n            {emailError && (\r\n              <p className=\"error-text\">Please Enter a valid Email!</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className={passwordClasses}>\r\n            <label htmlFor=\"password\" className={classes.pw}>\r\n              Password\r\n            </label>\r\n            <div className={classes.inpw}>\r\n              <input\r\n                className={classes.passUL}\r\n                type=\"password\"\r\n                id=\"set_password\"\r\n                border-radius=\"8em\"\r\n                size=\"38\"\r\n                onChange={passwordChangeHandler}\r\n                onBlur={passwordBlurHandler}\r\n                value={passwordValue}\r\n              />\r\n            </div>\r\n\r\n            {passwordError && (\r\n              <p className=\"error-text\">\r\n                Password should be atleast 6 characters long!\r\n              </p>\r\n            )}\r\n          </div>\r\n          <br></br>\r\n          <button disabled={!formValid} className={classes.submit}>\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Addprevjobs.js",["124","125"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {useRequest} from '../../hooks/request-hook'\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Addprevjobs = () => {\r\n  const navigate = useNavigate()\r\n  const [job, setJob] = useState({\r\n    compname: \"\",\r\n    duration: \"\",\r\n    salary: 0,\r\n    position: \"\",\r\n    location: \"\",\r\n  });\r\nconst {sendRequest} =  useRequest()\r\n  const handleChange = (e) => {\r\n    setJob({ ...job, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const submit = async(e) => {\r\n    e.preventDefault();\r\n    console.log(job.compname)\r\n    if(localStorage.hasOwnProperty(\"userid\"))\r\n    {\r\n   const response = await sendRequest(\r\n    'http://localhost:5002/jobs/addprevjobs',\r\n    'POST',\r\n    JSON.stringify( {\r\n      compname: job.compname,\r\n      duration: job.duration,\r\n      salary  : job.salary,\r\n      position: job.position,\r\n      location: job.location,\r\n      userid: localStorage.getItem(\"userid\")\r\n    }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n   )}\r\n      navigate('/profile')\r\n  //  console.log(response)\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <h1>Add Jobs</h1>\r\n      <form className=\"my-3\" onSubmit={submit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"compname\" className=\"form-label\">\r\n            <h4>Company Name</h4>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"compname\"\r\n            value={job.compname}\r\n            name=\"compname\"\r\n            onChange={handleChange}\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"duration\" className=\"form-label\">\r\n            <h4>Duration</h4>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"duration\"\r\n            value={job.duration}\r\n            onChange={handleChange}\r\n            name=\"duration\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"salary\" className=\"form-label\">\r\n            <h4>Salary</h4>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"salary\"\r\n            value={job.salary}\r\n            onChange={handleChange}\r\n            name=\"salary\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"position\" className=\"form-label\">\r\n            <h4>Position</h4>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={job.position}\r\n            onChange={handleChange}\r\n            id=\"position\"\r\n            name=\"position\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"location\" className=\"form-label\">\r\n            <h4>Location</h4>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={job.location}\r\n            onChange={handleChange}\r\n            id=\"location\"\r\n            name=\"location\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Add Note\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addprevjobs;\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Profile\\FormInput.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Pastjobs.js",["126"],"import React from \"react\";\r\nimport Jobdetails from \"./Jobdetails\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Addprevjobs from \"./Addprevjobs\";\r\nimport { useEffect,useState } from \"react\";\r\nimport { useRequest } from \"../../hooks/request-hook\";\r\n\r\nconst Pastjobs = () => {\r\n  const {sendRequest} = useRequest()\r\n  const [prevJobs,setJobs] = useState([])\r\n\r\n  useEffect(() => {\r\n      const fetchJobs = async () => {\r\n        try {\r\n          if (localStorage.hasOwnProperty(\"userid\")) {\r\n          const responseData = await sendRequest(\r\n            'http://localhost:5002/jobs/getprevjobs',\r\n            'POST',\r\n            JSON.stringify({\r\n              userid: localStorage.getItem(\"userid\")\r\n            }),\r\n            {\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n          );\r\n          // responseData.info.map(data=>setData(data))\r\n          // console.log(responseData)\r\n        //  setData(responseData.info)\r\n        setJobs(responseData)\r\n        } }catch (err) {\r\n          console.log(err)\r\n        }\r\n      };\r\n      fetchJobs();\r\n    \r\n  \r\n  }, [sendRequest]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"addjobs d-flex justify-content-center m-4\">\r\n       <Link to='/addpreviousjobs'><button className=\"btn btn-primary\">Add Previous Jobs</button></Link>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {console.log(prevJobs,\"chekckskk\")}\r\n          {\r\n          prevJobs.map((element) => {\r\n            return (\r\n              <div className=\"col-md-4\" key={element.compname}>\r\n                <Jobdetails\r\n                  compname={element.compname}\r\n                  duration={element.duration}\r\n                  salary =  {element.salary}\r\n                  position={element.position}\r\n                  location={element.location}\r\n                /> \r\n               </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pastjobs;\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Home\\Joblist.js",["127"],"import Jobs from './Jobs'\r\nimport classes from './Joblist.module.css'\r\nconst Joblist = (props)=>\r\n{\r\n    // console.log(props.details,'joblist props')\r\n    return (\r\n        <ul>\r\n\r\n            {\r\n            props.details?.map((i)=>\r\n            (\r\n                <Jobs \r\n                fromSalary={i.fromSalary}\r\n                toSalary = {i.toSalary}\r\n                title={i.title}\r\n                company= {i.company}\r\n                category= {i.category}\r\n                location = {i.city}\r\n                \r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Joblist;","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Profile\\SkillPanel.js",["128","129","130","131"],"import React, { useState } from \"react\";\r\n// import \"./SkillPanel.css\";\r\nimport classes from \"./SkillPanel.module.css\";\r\nimport { useRequest } from \"../../hooks/request-hook\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nvar arr = [\r\n  \"css\",\r\n  \"html\",\r\n  \"JavaScriptsuckzzzz\",\r\n  \"react\",\r\n  \"cpp\",\r\n  \"java\",\r\n  \"python\",\r\n  \"javascript\",\r\n];\r\n\r\nfunction SkillPanel() {\r\n  const [skills, setSkill] = useState(arr);\r\n  const tempFunc = (skill) => {\r\n    setSkill(skills.filter((skills) => skills != skill));\r\n  };\r\n\r\n  const addTag = () => {\r\n    console.log(EnteredSkill);\r\n    arr.push(EnteredSkill);\r\n    console.log(arr);\r\n    setEnteredSkill(\"\");\r\n  };\r\n  const navigate = useNavigate();\r\n  const uid = localStorage.getItem(\"userid\");\r\n  const [addskill, setAddskill] = useState(arr);\r\n  const { sendRequest } = useRequest();\r\n\r\n  const addSkill = (event) => {\r\n    setEnteredSkill(event.target.value);\r\n  };\r\n\r\n  const [EnteredSkill, setEnteredSkill] = useState(\"\");\r\n  // const [displayInputField, setStyle] = useState(\"none\");\r\n  const submitSkills = async (e) => {\r\n    e.preventDefault();\r\n    const response = await sendRequest(\r\n      \"http://localhost:5002/skills/addskills\",\r\n      \"POST\",\r\n      JSON.stringify({\r\n        userid: uid,\r\n        skills: addskill,\r\n      }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    navigate(\"/profile\");\r\n    // console.log(response.skill.skills);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.bg}>\r\n      <div className={classes.head}>\r\n        <h1>Skills</h1>\r\n      </div>\r\n\r\n      <div className={classes.tagDiv}>\r\n        <ul className={classes.sKillUL}>\r\n          {skills.map((skill, index) => (\r\n            <div>\r\n              <li key={index}>\r\n                {skill}\r\n                <button\r\n                  className={[classes.close, classes.skillBtn].join(\" \")}\r\n                  onClick={() => tempFunc(skill)}\r\n                >\r\n                  <i className=\"fa-solid  fa-circle-xmark\"></i>\r\n                </button>\r\n              </li>\r\n            </div>\r\n          ))}\r\n          <li>\r\n            <div className={classes.inputField}>\r\n              <input\r\n                className={classes.skillInput}\r\n                type=\"text\"\r\n                id=\"addSkill\"\r\n                name=\"addSkill\"\r\n                placeholder=\"add a skill\"\r\n                onChange={addSkill}\r\n              />\r\n            </div>\r\n            <button\r\n              className={[classes.close, classes.skillBtn].join(\" \")}\r\n              role=\"button\"\r\n            >\r\n              <i className=\"fa-solid fa-2x fa-plus\" onClick={addTag}></i>\r\n            </button>\r\n          </li>\r\n          <button\r\n            className=\"btn btn-primary saveskills mx-2\"\r\n            onClick={submitSkills}\r\n          >\r\n            Save Skills\r\n          </button>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkillPanel;\r\n","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\hooks\\useInput.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\hooks\\request-hook.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\ErrorModal.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\LoadingSpinner.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Home\\Jobs.js",["132"],"import React from 'react';\r\nimport classes from './Jobs.module.css';\r\nimport {Link} from 'react-router-dom'\r\nconst Jobs = (props) => {\r\n  console.log(props);    \r\n  return (\r\n\r\n    <li className={classes.movie}>\r\n      <h1>{props.title}</h1>\r\n      <h2>{props.company}</h2>\r\n      <h4>{props.location}</h4>\r\n      <p>{props.category}</p>\r\n      <h5>{props.fromSalary} - {props.toSalary}</h5>\r\n      <br />\r\n      {/* <button><Link to={props.url}>More Info</Link></button> */}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Jobs;","C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\LandingPage\\Jobdetails.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\Modal.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\FormElements\\Button.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\Design\\UIElements\\Backdrop.js",[],"C:\\Users\\sanju\\Desktop\\New SIH-project\\SIH-Project\\FrontEnd\\src\\components\\Formd\\Formd.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":6,"column":23,"nodeType":"139","messageId":"140","endLine":6,"endColumn":28},{"ruleId":"137","severity":1,"message":"141","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":17},{"ruleId":"137","severity":1,"message":"142","line":16,"column":8,"nodeType":"139","messageId":"140","endLine":16,"endColumn":12},{"ruleId":"137","severity":1,"message":"143","line":16,"column":13,"nodeType":"139","messageId":"140","endLine":16,"endColumn":20},{"ruleId":"137","severity":1,"message":"144","line":110,"column":10,"nodeType":"139","messageId":"140","endLine":110,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":135,"column":15,"nodeType":"147","endLine":142,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":78,"column":1,"nodeType":"150","messageId":"151","endLine":92,"endColumn":2},{"ruleId":"137","severity":1,"message":"152","line":11,"column":7,"nodeType":"139","messageId":"140","endLine":11,"endColumn":10},{"ruleId":"137","severity":1,"message":"153","line":13,"column":44,"nodeType":"139","messageId":"140","endLine":13,"endColumn":50},{"ruleId":"137","severity":1,"message":"154","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"137","severity":1,"message":"155","line":24,"column":10,"nodeType":"139","messageId":"140","endLine":24,"endColumn":18},{"ruleId":"137","severity":1,"message":"156","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":19},{"ruleId":"137","severity":1,"message":"157","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":21,"column":47,"nodeType":"160","messageId":"161","endLine":21,"endColumn":49},{"ruleId":"137","severity":1,"message":"162","line":32,"column":20,"nodeType":"139","messageId":"140","endLine":32,"endColumn":31},{"ruleId":"137","severity":1,"message":"155","line":43,"column":11,"nodeType":"139","messageId":"140","endLine":43,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":90,"column":13,"nodeType":"147","endLine":93,"endColumn":14},{"ruleId":"137","severity":1,"message":"154","line":3,"column":9,"nodeType":"139","messageId":"140","endLine":3,"endColumn":13},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'useId' is defined but never used.","Identifier","unusedVar","'FormInput' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'FilledGender' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'dat' is defined but never used.","'exists' is assigned a value but never used.","'Link' is defined but never used.","'response' is assigned a value but never used.","'Addprevjobs' is defined but never used.","'classes' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setAddskill' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","no-global-assign","no-unsafe-negation"]