{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanju Sabu\\\\Desktop\\\\Codes\\\\SIH-Project\\\\FrontEnd\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../../hooks/useInput\";\nimport { useRequest } from \"../../hooks/request-hook\";\nimport ErrorModal from \"../../Design/UIElements/ErrorModal\";\nimport { AuthContext } from '../../context/authcontext';\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isEmail = value => value.includes('@');\n\nconst isPassword = value => value.trim().length >= 3;\n\nlet formValid = false;\n\nconst Login = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isError,\n    sendRequest,\n    clearError\n  } = useRequest();\n  const {\n    value: emailValue,\n    isValid: emailisValid,\n    hasError: emailError,\n    valueChangeHandler: emailChangeHandler,\n    BlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  const {\n    value: passwordValue,\n    isValid: passwordisValid,\n    hasError: passwordError,\n    valueChangeHandler: passwordChangeHandler,\n    BlurHandler: passwordBlurHandler,\n    reset: resetPassword\n  } = useInput(isPassword);\n  const emailClasses = !emailError ? 'form-control' : 'form-control-invalid';\n  const passwordClasses = !passwordError ? 'form-control' : 'form-control-invalid';\n\n  if (emailisValid && passwordisValid) {\n    formValid = true;\n  }\n\n  if (!emailisValid || !passwordisValid) {\n    formValid = false;\n  }\n\n  const submitHandler = async event => {\n    event.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    const response = await sendRequest('http://localhost:5002/users/login', 'POST', JSON.stringify({\n      email: emailValue,\n      password: passwordValue\n    }), {\n      \"Content-Type\": \"application/json\"\n    });\n    auth.login();\n    console.log(response);\n    resetEmail();\n    resetPassword();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: isError,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          onChange: emailChangeHandler,\n          onBlur: emailBlurHandler,\n          value: emailValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 3\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please Enter a valid Email!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: passwordClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"set_password\",\n          onChange: passwordChangeHandler,\n          onBlur: passwordBlurHandler,\n          value: passwordValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 3\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Password should be atleast 3 characters long!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"Jvpd0Vl+sZl/UxSh5p2QO2gjHjo=\", false, function () {\n  return [useRequest, useInput, useInput];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useInput","useRequest","ErrorModal","AuthContext","useContext","isEmail","value","includes","isPassword","trim","length","formValid","Login","auth","isError","sendRequest","clearError","emailValue","isValid","emailisValid","hasError","emailError","valueChangeHandler","emailChangeHandler","BlurHandler","emailBlurHandler","reset","resetEmail","passwordValue","passwordisValid","passwordError","passwordChangeHandler","passwordBlurHandler","resetPassword","emailClasses","passwordClasses","submitHandler","event","preventDefault","response","JSON","stringify","email","password","login","console","log"],"sources":["C:/Users/Sanju Sabu/Desktop/Codes/SIH-Project/FrontEnd/src/components/Login/Login.js"],"sourcesContent":["import useInput from \"../../hooks/useInput\";\r\nimport { useRequest } from \"../../hooks/request-hook\";\r\nimport ErrorModal from \"../../Design/UIElements/ErrorModal\";\r\nimport {AuthContext} from '../../context/authcontext' \r\nimport { useContext } from \"react\";\r\nconst isEmail = value => value.includes('@');\r\nconst isPassword = value => value.trim().length >= 3;\r\nlet formValid = false\r\nconst Login = ()=>\r\n{\r\n  const auth = useContext(AuthContext)\r\n  const {isError,sendRequest,clearError} = useRequest()\r\n\r\n    const {\r\n        value: emailValue,\r\n        isValid: emailisValid,\r\n        hasError:emailError,\r\n        valueChangeHandler: emailChangeHandler,\r\n        BlurHandler: emailBlurHandler,\r\n        reset : resetEmail\r\n    \r\n      } = useInput(isEmail);\r\n    \r\n      const {\r\n        value: passwordValue,\r\n        isValid: passwordisValid,\r\n        hasError:passwordError,\r\n        valueChangeHandler: passwordChangeHandler,\r\n        BlurHandler: passwordBlurHandler,\r\n        reset : resetPassword\r\n    \r\n      } = useInput(isPassword);\r\n\r\n\r\n    const emailClasses = !emailError ? 'form-control' : 'form-control-invalid'\r\n    const passwordClasses = !passwordError ? 'form-control' : 'form-control-invalid'\r\n\r\n    if(emailisValid && passwordisValid )\r\n  {\r\n    formValid = true\r\n  }\r\n  if(!emailisValid || !passwordisValid )\r\n  {\r\n    formValid= false\r\n  }\r\n\r\n  const submitHandler =async(event)=>\r\n  {\r\n    event.preventDefault();\r\n    if(!formValid)\r\n    {\r\n        return;\r\n    }\r\n    const response = await sendRequest(\r\n      'http://localhost:5002/users/login',\r\n      'POST',\r\n      JSON.stringify({\r\n        email: emailValue,\r\n        password : passwordValue\r\n      }),\r\n      {\r\n        \"Content-Type\" : \"application/json\"\r\n      })\r\n    auth.login()\r\n    console.log(response)\r\n\r\n    resetEmail()\r\n    resetPassword()\r\n  }\r\nreturn(\r\n  <>\r\n  <ErrorModal error={isError} onClear ={clearError} />\r\n  <form onSubmit={submitHandler}>\r\n  <div>\r\n    Login Form\r\n  </div>\r\n\r\n  <div className={emailClasses}>\r\n\r\n  <label htmlFor='email'>Email</label>\r\n  <input type='text'\r\n   id='email'\r\n  onChange={emailChangeHandler} \r\n  onBlur={emailBlurHandler} \r\n  value={emailValue} />\r\n\r\n  {emailError && <p className='error-text'>Please Enter a valid Email!</p>}\r\n</div>\r\n\r\n<div className={passwordClasses}>\r\n\r\n  <label htmlFor='password'>Password</label>\r\n  <input type='password'\r\n   id='set_password'\r\n  onChange={passwordChangeHandler} \r\n  onBlur={passwordBlurHandler} \r\n  value={passwordValue} />\r\n\r\n  {passwordError && <p className='error-text'>Password should be atleast 3 characters long!</p>}\r\n\r\n</div>\r\n\r\n<button disabled={!formValid}>Submit</button>\r\n</form>\r\n</>\r\n)\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}